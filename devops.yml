---
- name: install and configure netops components
  hosts: netops
  connection: ssh
  remote_user: reginaoncloud
  become: yes
  become_method: sudo

  vars_files:
    - vars/vars-netops.yml
  
  tasks:
#    - name: Install required system packages
#      apt: name={{ item }} state=latest update_cache=yes
#      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
#
#    - name: Add Docker GPG apt Key
#      apt_key:
#        url: https://download.docker.com/linux/ubuntu/gpg
#        state: present
#
#    - name: Add Docker Repository
#      apt_repository:
#        repo: deb https://download.docker.com/linux/ubuntu bionic stable
#        state: present
#
#    - name: Update apt and install docker-ce
#      apt: update_cache=yes name=docker-ce state=latest
#
#    - name: Install Docker Module for Python
#      pip:
#        name: docker
#
#    - name: install docker-compose package
#      pip: name=docker-compose
#    
#    - name: git clone netbox
#      git:
#        repo: 'https://github.com/netbox-community/netbox-docker.git'
#        dest: /home/reginaoncloud/netbox-docker
#        clone: yes
#
#    - name: Ensure group docker exists
#      group:
#        name: docker
#        state: present
#
#    - user:
#        name: reginaoncloud
#        shell: /bin/bash
#        group: docker
#        append: yes
#
#    - docker_compose:
#        project_src: /home/reginaoncloud/netbox-docker
#        state: present
#        pull: yes
#        build: yes
#
#    - docker_compose:
#        project_src: /home/reginaoncloud/netbox-docker
#        state: present
#        build: yes
#
#    - docker_compose:
#        project_src: /home/reginaoncloud/netbox-docker
#      register: output
#
#    - debug:
#        var: output

#    - name: Build Docker image from Dockerfile
#      docker_image:
#        name: web
#        path: docker
#        state: build
#        
#    - name: Running the container
#      docker_container:
#        image: web:latest
#        path: docker
#        state: running
#    
#    - name: Check if container is running
#      shell: docker ps